# Generated by Django 5.2.6 on 2025-09-23 21:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenSkill',
            fields=[
                ('genSkills_id', models.AutoField(db_column='genskills_id', primary_key=True, serialize=False)),
                ('genCateg', models.CharField(db_column='gencateg', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'genskills_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpecSkill',
            fields=[
                ('specSkills_id', models.AutoField(db_column='specskills_id', primary_key=True, serialize=False)),
                ('specName', models.CharField(db_column='speccateg', max_length=150, unique=True)),
            ],
            options={
                'db_table': 'specskills_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='user_id', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='first_name', max_length=100)),
                ('last_name', models.CharField(db_column='last_name', max_length=100)),
                ('username', models.CharField(db_column='username', max_length=50, unique=True)),
                ('email', models.EmailField(db_column='email', max_length=50, unique=True)),
                ('password', models.CharField(db_column='password', max_length=100)),
                ('profilePic', models.ImageField(blank=True, db_column='profilepic', null=True, upload_to='profile_pics/')),
                ('bio', models.CharField(blank=True, db_column='bio', max_length=150, null=True)),
                ('location', models.CharField(blank=True, db_column='location', max_length=300, null=True)),
                ('ratingCount', models.IntegerField(db_column='ratingcount', default=0)),
                ('avgStars', models.DecimalField(db_column='avgstars', decimal_places=2, default=0.0, max_digits=3)),
                ('tot_XpPts', models.IntegerField(db_column='tot_xppts', default=0)),
                ('level', models.IntegerField(db_column='level', default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('userVerifyId', models.FileField(blank=True, db_column='userverifyid', null=True, upload_to='user_verifications/')),
                ('is_verified', models.BooleanField(db_column='is_verified', default=False)),
                ('links', models.JSONField(blank=True, default=list, null=True)),
                ('verification_status', models.CharField(choices=[('UNVERIFIED', 'Unverified'), ('PENDING', 'Pending'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected')], db_column='verification_status', default='UNVERIFIED', max_length=20)),
                ('is_active', models.BooleanField(db_column='is_active', default=True)),
            ],
            options={
                'db_table': 'users_tbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'password_reset_token_tbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TradeRequest',
            fields=[
                ('tradereq_id', models.AutoField(db_column='tradereq_id', primary_key=True, serialize=False)),
                ('reqname', models.CharField(db_column='reqname', max_length=100)),
                ('reqdeadline', models.DateField(blank=True, db_column='reqdeadline', null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], db_column='status', max_length=15, null=True)),
                ('exchange', models.CharField(blank=True, db_column='exchangename', max_length=255, null=True)),
                ('classified_category', models.CharField(blank=True, db_column='classifiedcategory', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', null=True)),
                ('requester', models.ForeignKey(db_column='requester_id', on_delete=django.db.models.deletion.CASCADE, related_name='trade_requests_made', to=settings.AUTH_USER_MODEL)),
                ('responder', models.ForeignKey(blank=True, db_column='responder_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trade_requests_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tradereq_tbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evaluation_id', models.AutoField(db_column='evaluation_id', primary_key=True, serialize=False)),
                ('taskcomplexity', models.IntegerField(db_column='taskcomplexity')),
                ('timecommitment', models.IntegerField(db_column='timecommitment')),
                ('skilllevel', models.IntegerField(db_column='skilllevel')),
                ('evaluationdescription', models.CharField(db_column='evaluationdescription', max_length=500)),
                ('requester_evaluation_status', models.CharField(blank=True, choices=[('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], db_column='requester_evaluation_status', max_length=20, null=True)),
                ('responder_evaluation_status', models.CharField(blank=True, choices=[('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], db_column='responder_evaluation_status', max_length=20, null=True)),
                ('requester_responded_at', models.DateTimeField(blank=True, db_column='requester_responded_at', null=True)),
                ('responder_responded_at', models.DateTimeField(blank=True, db_column='responder_responded_at', null=True)),
                ('trade_request', models.ForeignKey(db_column='tradereq_id', on_delete=django.db.models.deletion.CASCADE, to='accounts.traderequest')),
            ],
            options={
                'db_table': 'evaluation_tbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserCredential',
            fields=[
                ('usercred_id', models.AutoField(db_column='usercred_id', primary_key=True, serialize=False)),
                ('credential_title', models.CharField(db_column='credential_title', max_length=150)),
                ('issuer', models.CharField(db_column='issuer', max_length=150)),
                ('issue_date', models.DateField(db_column='issue_date')),
                ('expiry_date', models.DateField(blank=True, db_column='expiry_date', null=True)),
                ('cred_id', models.CharField(blank=True, db_column='cred_id', max_length=100, null=True)),
                ('cred_url', models.TextField(blank=True, db_column='cred_url', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('genskills_id', models.ForeignKey(blank=True, db_column='genskills_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='accounts.genskill')),
                ('specskills_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.specskill')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usercredentials_tbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserInterest',
            fields=[
                ('userinterests_id', models.AutoField(db_column='userinterests_id', primary_key=True, serialize=False)),
                ('genSkills_id', models.ForeignKey(db_column='genskills_id', on_delete=django.db.models.deletion.CASCADE, to='accounts.genskill')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userinterests_tbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TradeInterest',
            fields=[
                ('trade_interests_id', models.AutoField(db_column='trade_interests_id', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DECLINED', 'Declined'), ('CANCELLED', 'Cancelled')], db_column='status', default='PENDING', max_length=10)),
                ('interested_user', models.ForeignKey(db_column='interested_user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trade_request', models.ForeignKey(db_column='tradereq_id', on_delete=django.db.models.deletion.CASCADE, related_name='interests', to='accounts.traderequest')),
            ],
            options={
                'db_table': 'trade_interests_tbl',
                'managed': True,
                'unique_together': {('trade_request', 'interested_user')},
            },
        ),
        migrations.CreateModel(
            name='TradeDetail',
            fields=[
                ('tradedetails_id', models.AutoField(db_column='tradedetails_id', primary_key=True, serialize=False)),
                ('skillprof', models.CharField(blank=True, choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('CERTIFIED', 'Certified')], db_column='skillprof', max_length=13, null=True)),
                ('modedel', models.CharField(blank=True, choices=[('ONLINE', 'Online'), ('ONSITE', 'Onsite'), ('HYBRID', 'Hybrid')], db_column='modedel', max_length=25, null=True)),
                ('reqtype', models.CharField(blank=True, choices=[('SERVICE', 'Service'), ('OUTPUT', 'Output'), ('PROJECT', 'Project')], db_column='reqtype', max_length=35, null=True)),
                ('contextpic', models.ImageField(blank=True, db_column='contextpic', null=True, upload_to='requestcontext_pics/')),
                ('reqbio', models.CharField(blank=True, db_column='reqbio', max_length=150, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('total_xp', models.IntegerField(blank=True, db_column='total_xp', default=0, null=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trade_request', models.ForeignKey(db_column='tradereq_id', on_delete=django.db.models.deletion.CASCADE, to='accounts.traderequest')),
            ],
            options={
                'db_table': 'trade_details_tbl',
                'managed': True,
                'unique_together': {('trade_request', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('userSkill_id', models.AutoField(db_column='userskills_id', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('specSkills', models.ForeignKey(db_column='specskills_id', on_delete=django.db.models.deletion.RESTRICT, to='accounts.specskill')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userskills_tbl',
                'managed': True,
                'unique_together': {('user', 'specSkills')},
            },
        ),
    ]
